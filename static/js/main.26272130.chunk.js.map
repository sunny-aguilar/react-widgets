{"version":3,"sources":["components/Dropdown.js","App.js","index.js"],"names":["Dropdown","options","selected","onSelectedChange","useState","open","setOpen","ref","useRef","useEffect","document","body","addEventListener","event","current","contains","target","renderedOptions","map","option","value","key","className","onClick","label","setSelected","showDropdown","setShowDropdown","ReactDOM","render","App","querySelector"],"mappings":"yLAwDeA,G,uBAnDE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,iBAAuB,EAEpCC,oBAAS,GAF2B,mBAErDC,EAFqD,KAE/CC,EAF+C,KAGtDC,EAAMC,mBAEZC,qBAAU,WACRC,SAASC,KAAKC,iBAAiB,SAAS,SAACC,GACnCN,EAAIO,QAAQC,SAASF,EAAMG,SAI/BV,GAAQ,SAKZ,IAAMW,EAAkBhB,EAAQiB,KAAI,SAACC,GACnC,OAAIA,EAAOC,QAAUlB,EAASkB,MACrB,KAGP,yBACEC,IAAKF,EAAOC,MACZE,UAAU,OACVC,QAAS,kBAAMpB,EAAiBgB,KAE/BA,EAAOK,UAMd,OACE,yBAAKjB,IAAKA,EAAKe,UAAU,WACvB,yBAAKA,UAAU,SACb,2BAAOA,UAAU,SAAjB,kBACA,yBACEC,QAAS,kBAAMjB,GAASD,IACxBiB,UAAS,gCAA2BjB,EAAO,iBAAmB,GAArD,MAET,uBAAGiB,UAAU,kBACb,yBAAKA,UAAU,QAAQpB,EAASsB,OAChC,yBAAKF,UAAS,eAAUjB,EAAO,qBAAuB,KACnDY,QCzBPhB,EAAU,CACd,CACEuB,MAAO,gBACPJ,MAAO,OAET,CACEI,MAAO,kBACPJ,MAAO,SAET,CACEI,MAAO,iBACPJ,MAAO,SAKI,aAAO,IAAD,EACahB,mBAASH,EAAQ,IAD9B,mBACZC,EADY,KACFuB,EADE,OAEqBrB,oBAAS,GAF9B,mBAEZsB,EAFY,KAEEC,EAFF,KAInB,OACE,6BAGE,4BAAQJ,QAAS,kBAAMI,GAAiBD,KAAxC,mBAICA,EACC,kBAAC,EAAD,CACExB,SAAUA,EACVC,iBAAkBsB,EAClBxB,QAASA,IAET,OClDV2B,IAASC,OAAO,kBAACC,EAAD,MAASpB,SAASqB,cAAc,Y","file":"static/js/main.26272130.chunk.js","sourcesContent":["// hooks:\n// useState, useEffect, useRef\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// set state\nconst Dropdown = ({ options, selected, onSelectedChange }) => {\n  // state\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n\n  useEffect(() => {\n    document.body.addEventListener(\"click\", (event) => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    });\n  });\n\n  //\n  const renderedOptions = options.map((option) => {\n    if (option.value === selected.value) {\n      return null;\n    }\n    return (\n      <div\n        key={option.value}\n        className=\"item\"\n        onClick={() => onSelectedChange(option)}\n      >\n        {option.label}\n      </div>\n    );\n  });\n\n  // return dropdown component\n  return (\n    <div ref={ref} className=\"ui form\">\n      <div className=\"field\">\n        <label className=\"label\">Select a Color</label>\n        <div\n          onClick={() => setOpen(!open)}\n          className={`ui selection dropdown ${open ? \"visible active\" : \"\"} `}\n        >\n          <i className=\"dropdown icon\"></i>\n          <div className=\"text\">{selected.label}</div>\n          <div className={`menu ${open ? \"visible transition\" : \"\"}`}>\n            {renderedOptions}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","// import libraries and components\nimport React, { useState } from \"react\";\nimport Accordion from \"./components/Accordion\";\nimport Search from \"./components/Search\";\nimport Dropdown from \"./components/Dropdown\";\n\n// accordion state params\nconst items = [\n  {\n    title: \"What is React?\",\n    content: \"React is a front end javascript framework\",\n  },\n  {\n    title: \"Why use React?\",\n    content: \"React is a favorite JS library among engineers\",\n  },\n  {\n    title: \"How do you use React?\",\n    content: \"You use React by creating components\",\n  },\n];\n\n// dropdown state params\nconst options = [\n  {\n    label: \"The Color Red\",\n    value: \"red\",\n  },\n  {\n    label: \"The Color Green\",\n    value: \"green\",\n  },\n  {\n    label: \"The Color Blue\",\n    value: \"blue\",\n  },\n];\n\n// return app to index.js\nexport default () => {\n  const [selected, setSelected] = useState(options[0]);\n  const [showDropdown, setShowDropdown] = useState(true);\n\n  return (\n    <div>\n      {/* <Accordion items={items} /> */}\n      {/* <Search /> */}\n      <button onClick={() => setShowDropdown(!showDropdown)}>\n        Toggle Dropdown\n      </button>\n      {/* toggle visibility of dropdown */}\n      {showDropdown ? (\n        <Dropdown\n          selected={selected}\n          onSelectedChange={setSelected}\n          options={options}\n        />\n      ) : null}\n    </div>\n  );\n};\n","// import libraries and components\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\n// render app\n// App is being developed in a separte module to keep index.js clean\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}